<?php

/**
 * This is the model base class for the table "news_rating".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "NewsRating".
 *
 * Columns in table "news_rating" available as properties of the model,
 * followed by relations of table "news_rating" available as properties of the model.
 *
 * @property string $intRatingID
 * @property string $intEditionID
 * @property string $intNewPublicID
 * @property string $intLikes
 * @property string $intDisLikes
 *
 * @property News $intNew
 * @property Editions $intEdition
 */
abstract class BaseNewsRating extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'news_rating';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'NewsRating|Новостной рейтинг', $n);
	}

	public static function representingColumn() {
		return 'intRatingID';
	}

	public function rules() {
		return array(
			array('intEditionID, intNewID, intLikes, intDisLikes', 'length', 'max'=>10),
			array('intEditionID, intNewID, intLikes, intDisLikes', 'default', 'setOnEmpty' => true, 'value' => null),
			array('intRatingID, intEditionID, intNewID, intLikes, intDisLikes', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'intNew' => array(self::BELONGS_TO, 'News', 'intNewID'),
			'intEdition' => array(self::BELONGS_TO, 'Editions', 'intEditionID'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'intRatingID' => Yii::t('app', 'Int Rating'),
			'intEditionID' => null,
			'intNewPublicID' => null,
			'intLikes' => Yii::t('app', 'Int Likes'),
			'intDisLikes' => Yii::t('app', 'Int Dis Likes'),
			'intNew' => null,
			'intEdition' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('intRatingID', $this->intRatingID, true);
		$criteria->compare('intEditionID', $this->intEditionID);
		$criteria->compare('intNewID', $this->intNewID);
		$criteria->compare('intLikes', $this->intLikes, true);
		$criteria->compare('intDisLikes', $this->intDisLikes, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}