<?php

/**
 * This is the model base class for the table "editions".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Editions".
 *
 * Columns in table "editions" available as properties of the model,
 * followed by relations of table "editions" available as properties of the model.
 *
 * @property string $intEditionID
 * @property integer $intNumByMonth
 * @property integer $intMonth
 * @property string $intYear
 * @property string $varText
 * @property string $varMarketID
 * @property integer $isPublic
 * @property datetime dtPublic
 *
 * @property NewsPublic $intEdition
 * @property NewsComments[] $newsComments
 * @property NewsRating[] $newsRatings
 */
abstract class BaseEditions extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'editions';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Editions|Editions', $n);
	}

	public static function representingColumn() {
		return 'intYear';
	}

    public function rules() {
        return array(
            array('intNumByMonth, intMonth, intYear', 'required'),
            array('intNumByMonth, intMonth, isPublic', 'numerical', 'integerOnly'=>true),
            array('intYear', 'length', 'max'=>4),
            array('varText','varMarketID', 'safe'),
            array('varText, isPublic', 'default', 'setOnEmpty' => true, 'value' => null),
            array('intEditionID, intNumByMonth, intMonth, intYear, varText, isPublic', 'safe', 'on'=>'search'),
        );
    }


    public function relations() {
        return array(
            'newsComments' => array(self::HAS_MANY, 'NewsComments', 'intEditionID'),
            'newsPublics' => array(self::HAS_MANY, 'NewsPublic', 'intEditionID'),
            'newsRatings' => array(self::HAS_MANY, 'NewsRating', 'intEditionID'),
        );
    }

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'intEditionID' => Yii::t('app', 'Int Edition'),
			'intNumByMonth' => Yii::t('app', 'Int Num By Month'),
			'intMonth' => Yii::t('app', 'Int Month'),
			'intYear' => Yii::t('app', 'Int Year'),
			'varText' => Yii::t('app', 'Var Text'),
			'isPublic' => Yii::t('app', 'Is Public'),
			'newsComments' => null,
			'varMarketID' => 'MarketID',
			'newsRatings' => null,
			'dtPublic' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

        $criteria->compare('intEditionID', $this->intEditionID);
		$criteria->compare('intEditionID', $this->intEditionID, true);
		$criteria->compare('intNumByMonth', $this->intNumByMonth);
		$criteria->compare('intMonth', $this->intMonth);
		$criteria->compare('intYear', $this->intYear, true);
		$criteria->compare('varText', $this->varText, true);
		$criteria->compare('isPublic', $this->isPublic);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}