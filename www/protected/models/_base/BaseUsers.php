<?php

/**
 * This is the model base class for the table "users".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Users".
 *
 * Columns in table "users" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $intUserID
 * @property integer $isActive
 * @property string $varPassword
 * @property string $varName
 * @property integer $isAdmin
 *
 */
abstract class BaseUsers extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'users';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Users|Пользователи', $n);
	}

	public static function representingColumn() {
		return 'varPassword';
	}

	public function rules() {
		return array(
			array('varPassword, varName', 'required'),
			array('isActive, isAdmin', 'numerical', 'integerOnly'=>true),
			array('varPassword', 'length', 'max'=>32),
			array('varName', 'length', 'max'=>150),
			array('isActive, isAdmin', 'default', 'setOnEmpty' => true, 'value' => null),
			array('intUserID, isActive, varPassword, varName, isAdmin', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'intUserID' => Yii::t('app', 'Int User'),
			'isActive' => Yii::t('app', 'Is Active'),
			'varPassword' => Yii::t('app', 'Пароль'),
			'varName' => Yii::t('app', 'Логин'),
			'isAdmin' => Yii::t('app', 'Is Admin'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('intUserID', $this->intUserID, true);
		$criteria->compare('isActive', $this->isActive);
		$criteria->compare('varPassword', $this->varPassword, true);
		$criteria->compare('varName', $this->varName, true);
		$criteria->compare('isAdmin', $this->isAdmin);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}