<?php

/**
 * This is the model base class for the table "editions_items".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "EditionsItems".
 *
 * Columns in table "editions_items" available as properties of the model,
 * followed by relations of table "editions_items" available as properties of the model.
 *
 * @property string $intID
 * @property string $intEditionID
 * @property string $intNewPublicID
 * @property integer $isRTP
 *
 * @property NewsPublic $intNewPublic
 * @property Editions $intEdition
 */
abstract class BaseEditionsItems extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'editions_items';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'EditionsItems|EditionsItems', $n);
	}

	public static function representingColumn() {
		return 'intID';
	}

    public function rules() {
        return array(
            array('intEditionID, intNewPublicID', 'required'),
            array('isRTP', 'numerical', 'integerOnly'=>true),
            array('intEditionID, intNewPublicID', 'length', 'max'=>10),
            array('isRTP', 'default', 'setOnEmpty' => true, 'value' => null),
            array('intID, intEditionID, intNewPublicID, isRTP', 'safe', 'on'=>'search'),
        );
    }

	public function relations() {
		return array(
			'intNewPublic' => array(self::BELONGS_TO, 'NewsPublic', 'intNewPublicID'),
			'intEdition' => array(self::BELONGS_TO, 'Editions', 'intEditionID'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

    public function attributeLabels() {
        return array(
            'intID' => Yii::t('app', 'Int'),
            'intEditionID' => null,
            'intNewPublicID' => null,
            'isRTP' => Yii::t('app', 'Is Rtp'),
            'intEdition' => null,
            'intNewPublic' => null,
        );
    }

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('intID', $this->intID, true);
		$criteria->compare('intEditionID', $this->intEditionID);
		$criteria->compare('intNewPublicID', $this->intNewPublicID);
        $criteria->compare('isRTP', $this->isRTP);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}